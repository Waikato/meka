<?xml version="1.0"?>
<project name="meka" default="compile" basedir=".">

    <!-- directories -->
    <property name="src" value="src/main/java"/>
    <property name="src-tests" value="src/test/java"/>
    <property name="resources" value="src/main/resources"/>
    <property name="resources-tests" value="src/test/resources"/>
    <property name="build" value="target/classes"/>
    <property name="build-tests" value="target/test-classes"/>
	<property name="javadoc" value="doc/api"/>
	<property name="pdfs" value="doc/pdf"/>
    <property name="jar" value="target"/>
    <property name="lib" value="lib"/>
    <property name="all" value="."/>
    <property name="scripts" value="scripts"/>
    <property name="release" value="target"/>

    <property name="version" value="1.0"/>

    <!-- CLASSPATH -->
    <path id="project.class.path">
      <pathelement location="." />
      <fileset dir="${lib}">
         <include name="*.jar"/>
      </fileset>
    </path>

    <target name="clean" description="Removes the build directory, generated jars and temp files."> 
	<delete dir="${build}" failonerror="false"/>
	<delete dir="${javadoc}"/>
        <delete>
          <fileset dir="${basedir}" includes="*.jar"/>
          <fileset dir="${basedir}" includes="*.zip"/>
        </delete>
        <delete defaultexcludes="no">
          <fileset dir="${basedir}" includes="**/*~" defaultexcludes="no"/>
          <fileset dir="${basedir}" includes="**/.DS_Store" defaultexcludes="no"/>
          <fileset dir="${basedir}" includes="hs_err_pid*"/>
        </delete>
        <delete>
        	<fileset dir="${basedir}" includes="temp_Testdata_*.arff"/>
        </delete>
    </target>

    <target name="init"> 
	<mkdir dir="${build}"/>
        <copy todir="${build}" >
            <fileset dir="${resources}">
              <include name="**/*.*"/>
            </fileset>
        </copy>
	<mkdir dir="${build-tests}"/>
        <copy todir="${build-tests}" >
            <fileset dir="${resources-tests}">
              <include name="**/*.*"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init" description="Compiles the source code."> 
	<javac srcdir="${src}" destdir="${build}" debug="true" debuglevel="lines,vars,source" classpathref="project.class.path">
	</javac>
	<javac srcdir="${src-tests}" destdir="${build-tests}" debug="true" debuglevel="lines,vars,source">
		<classpath>
	      <fileset dir="${lib}">
    	     <include name="*.jar"/>
	      </fileset>
	      <pathelement path="${build}"/>
		</classpath>
	</javac>
    </target>

    <target name="jar" depends="compile">
	<jar destfile="${jar}/meka-${version}.jar"
	     basedir="${build}/"
	     includes="weka/** meka/**">
		<manifest>
			<attribute name="Main-Class" value="meka.gui.explorer.Explorer"/>
		</manifest>
	</jar>
	<jar destfile="${jar}/meka-${version}-tests.jar"
	     basedir="${build-tests}/"
	     includes="weka/** meka/**">
	</jar>
    </target>

    <target name="tests" depends="compile" description="Executes the tests.">
     <java fork="yes" dir="."
      classname="junit.textui.TestRunner"
      taskname="junit" failonerror="true">
		 <arg value="weka.MekaTests"/>
    		<classpath>
		      <fileset dir="${lib}">
    		     <include name="*.jar"/>
	    	  </fileset>
		      <pathelement path="${build}"/>
		      <pathelement path="${build-tests}"/>
    		</classpath>
         <jvmarg value="-Duser.timezone=Pacific/Auckland"/>
   	 </java>
     <delete>
      	<fileset dir="${basedir}" includes="temp_Testdata_*.arff"/>
     </delete>
    </target>

    <target name="src-jar" description="Creates a source archive.">
	<jar destfile="${jar}/meka-src-${version}.jar">
 		<zipfileset dir="${src}" prefix="src/main/java"/>
 		<zipfileset dir="${resources}" prefix="src/main/resources"/>
 		<zipfileset dir="${src-tests}" prefix="src/test/java"/>
 		<zipfileset dir="${resources-tests}" prefix="src/test/resources"/>
		<fileset file="build.xml"/>
		<fileset file="LICENSE.txt"/>
		<fileset file="README.txt"/>
	</jar>
    </target>

    <target name="full-jar" description="Creates full archive.">
	<jar destfile="${jar}/meka-full-${version}.jar" basedir="${all}/"/>
    </target>

    <target name="javadoc" description="Generate Javadoc documentation.">
        <javadoc
			classpathref 	 = "project.class.path"
			access           = "public"
            defaultexcludes  = "yes"
            use              = "yes"
            header           = "MEKA ${version}"
            doctitle         = "MEKA - Multi-label Extension to weKA"
            nodeprecatedlist = "yes"
            sourcepath       = "${src}"
            destdir          = "${javadoc}"
            />
    </target>

    <target name="javadoc-jar" depends="javadoc" description="Creates an archive from the Javadoc.">
	<zip destfile="${jar}/meka-javadoc-${version}.zip" basedir="${javadoc}/"/>
    </target>

    <target name="all" depends="jar, src-jar, javadoc-jar" description="Generates all jars."/>

    <target name="release" depends="clean, all, tests" description="Generates a release archive.">
	  <zip destfile="${release}/meka-release-${version}.zip">
	    <zipfileset dir="${basedir}" includes="README.txt" prefix="meka-${version}"/>
	    <zipfileset dir="${basedir}" includes="LICENSE.txt" prefix="meka-${version}"/>
	    <zipfileset dir="${pdfs}" includes="*.pdf" prefix="meka-${version}"/>
	    <zipfileset dir="${jar}" includes="meka-src-${version}.jar" prefix="meka-${version}"/>
	    <zipfileset dir="${jar}" includes="meka-${version}.jar" prefix="meka-${version}/lib"/>
	    <zipfileset dir="${basedir}" includes="lib/*.jar" prefix="meka-${version}"/>
	    <zipfileset dir="${basedir}" includes="lib/README.txt" prefix="meka-${version}"/>
	    <zipfileset dir="${basedir}" includes="data/*.*" prefix="meka-${version}"/>
	    <zipfileset dir="${javadoc}" prefix="meka-${version}/api"/>
	    <zipfileset dir="${scripts}" prefix="meka-${version}"/>
	  </zip>
    </target>

</project>
